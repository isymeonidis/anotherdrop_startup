<?php

/*
 * AnotherDrop Startup has mainly developed by Iraklis Symeonidis (hsimeoni)
 * It is under GNU and GPL licence..
 */

/**
 * @file
 * Install, update and uninstall functions for the AnotherDrop Startup install profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function AnotherDrop_Startup_install() {
    // Add text formats.
    $full_html_format = array(
        'format' => 'full_html',
        'name' => 'Full HTML',
        'weight' => 0,
        'filters' => array(
            // URL filter.
            'filter_url' => array(
                'weight' => 0,
                'status' => 1,
            ),
            // Line break filter.
            'filter_autop' => array(
                'weight' => 1,
                'status' => 1,
            ),
            // HTML corrector filter.
            'filter_htmlcorrector' => array(
                'weight' => 10,
                'status' => 1,
            ),
            // Media corrector filter for wysiwyg.
            'media_filter' => array(
                'weight' => -1,
                'status' => 1,
            ),
        ),
    );
    $full_html_format = (object) $full_html_format;
    filter_format_save($full_html_format);

    $filtered_html_format = array(
        'format' => 'filtered_html',
        'name' => 'Filtered HTML',
        'weight' => 1,
        'filters' => array(
            // URL filter.
            'filter_url' => array(
                'weight' => 0,
                'status' => 1,
            ),
            // HTML filter.
            'filter_html' => array(
                'weight' => 1,
                'status' => 1,
            ),
            // Line break filter.
            'filter_autop' => array(
                'weight' => 2,
                'status' => 1,
            ),
            // HTML corrector filter.
            'filter_htmlcorrector' => array(
                'weight' => 10,
                'status' => 1,
            ),
            // Media corrector filter for wysiwyg.
            'media_filter' => array(
                'weight' => -1,
                'status' => 1,
            ),
        ),
    );
    $filtered_html_format = (object) $filtered_html_format;
    filter_format_save($filtered_html_format);

    // Enable some AnotherDrop Startup blocks.
    $default_theme = variable_get('theme_default', 'bartik');
    $admin_theme = 'seven';
    $blocks = array(
        array(
            'module' => 'system',
            'delta' => 'main',
            'theme' => $default_theme,
            'status' => 1,
            'weight' => 0,
            'region' => 'content',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'search',
            'delta' => 'form',
            'theme' => $default_theme,
            'status' => 1,
            'weight' => -1,
            'region' => 'sidebar_first',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'node',
            'delta' => 'recent',
            'theme' => $admin_theme,
            'status' => 1,
            'weight' => 10,
            'region' => 'dashboard_main',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'user',
            'delta' => 'login',
            'theme' => $default_theme,
            'status' => 1,
            'weight' => 0,
            'region' => 'sidebar_first',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'system',
            'delta' => 'navigation',
            'theme' => $default_theme,
            'status' => 1,
            'weight' => 0,
            'region' => 'sidebar_first',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'system',
            'delta' => 'powered-by',
            'theme' => $default_theme,
            'status' => 1,
            'weight' => 10,
            'region' => 'footer',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'system',
            'delta' => 'help',
            'theme' => $default_theme,
            'status' => 1,
            'weight' => 0,
            'region' => 'help',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'system',
            'delta' => 'main',
            'theme' => $admin_theme,
            'status' => 1,
            'weight' => 0,
            'region' => 'content',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'system',
            'delta' => 'help',
            'theme' => $admin_theme,
            'status' => 1,
            'weight' => 0,
            'region' => 'help',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'user',
            'delta' => 'login',
            'theme' => $admin_theme,
            'status' => 1,
            'weight' => 10,
            'region' => 'content',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'user',
            'delta' => 'new',
            'theme' => $admin_theme,
            'status' => 1,
            'weight' => 0,
            'region' => 'dashboard_sidebar',
            'pages' => '',
            'cache' => -1,
        ),
        array(
            'module' => 'search',
            'delta' => 'form',
            'theme' => $admin_theme,
            'status' => 1,
            'weight' => -10,
            'region' => 'dashboard_sidebar',
            'pages' => '',
            'cache' => -1,
        ),
    );
    $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
    foreach ($blocks as $block) {
        $query->values($block);
    }
    $query->execute();

    // Insert default pre-defined node types into the database. For a complete
    // list of available node type attributes, refer to the node type API
    // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
    $types = array(
        array(
            'type' => 'page',
            'name' => st('Basic page'),
            'base' => 'node_content',
            'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
            'custom' => 1,
            'modified' => 1,
            'locked' => 0,
        ),
        array(
            'type' => 'article',
            'name' => st('Article'),
            'base' => 'node_content',
            'description' => st('Use <em>articles</em> for time-sensitive content like news, press releases or blog posts.'),
            'custom' => 1,
            'modified' => 1,
            'locked' => 0,
        ),
    );

    foreach ($types as $type) {
        $type = node_type_set_defaults($type);
        node_type_save($type);
        node_add_body_field($type);
    }

    // Insert default pre-defined RDF mapping into the database.
    $rdf_mappings = array(
        array(
            'type' => 'node',
            'bundle' => 'page',
            'mapping' => array(
                'rdftype' => array('foaf:Document'),
            ),
        ),
        array(
            'type' => 'node',
            'bundle' => 'article',
            'mapping' => array(
                'field_image' => array(
                    'predicates' => array('og:image', 'rdfs:seeAlso'),
                    'type' => 'rel',
                ),
                'field_tags' => array(
                    'predicates' => array('dc:subject'),
                    'type' => 'rel',
                ),
            ),
        ),
    );
    foreach ($rdf_mappings as $rdf_mapping) {
        rdf_mapping_save($rdf_mapping);
    }

    // Default "Basic page" to not be promoted and have comments disabled.
    variable_set('node_options_page', array('status'));
    variable_set('comment_page', COMMENT_NODE_HIDDEN);

    // Don't display date and author information for "Basic page" nodes by default.
    variable_set('node_submitted_page', FALSE);

    // Enable user picture support and set the default to a square thumbnail option.
    variable_set('user_pictures', '1');
    variable_set('user_picture_dimensions', '1024x1024');
    variable_set('user_picture_file_size', '800');
    variable_set('user_picture_style', 'thumbnail');

    // Only adimistrators can create a user.
    // Set this as a default to avoid bots spammimg, if no extra user needed
    variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

    /*
     * Set Structure -> Taxonomy
     */
    
    // Create a default vocabulary named "Tags", enabled for the 'article' content type.
    $description = st('Use tags to group articles on similar topics into categories.');
    $help = st('Enter a comma-separated list of words to describe your content.');
    $vocabulary = (object) array(
                'name' => st('Tags'),
                'description' => $description,
                'machine_name' => 'tags',
                'help' => $help,
    );
    taxonomy_vocabulary_save($vocabulary);

    $field = array(
        'field_name' => 'field_' . $vocabulary->machine_name,
        'type' => 'taxonomy_term_reference',
        // Set cardinality to unlimited for tagging.
        'cardinality' => FIELD_CARDINALITY_UNLIMITED,
        'settings' => array(
            'allowed_values' => array(
                array(
                    'vocabulary' => $vocabulary->machine_name,
                    'parent' => 0,
                ),
            ),
        ),
    );
    field_create_field($field);

    $instance = array(
        'field_name' => 'field_' . $vocabulary->machine_name,
        'entity_type' => 'node',
        'label' => 'Tags',
        'bundle' => 'article',
        'description' => $vocabulary->help,
        'widget' => array(
            'type' => 'taxonomy_autocomplete',
            'weight' => -4,
        ),
        'display' => array(
            'default' => array(
                'type' => 'taxonomy_term_reference_link',
                'weight' => 10,
            ),
            'teaser' => array(
                'type' => 'taxonomy_term_reference_link',
                'weight' => 10,
            ),
        ),
    );
    field_create_instance($instance);


    // Create an image field named "Image", enabled for the 'article' content type.
    // Many of the following values will be defaulted, they're included here as an illustrative examples.
    // See http://api.drupal.org/api/function/field_create_field/7

    $field = array(
        'field_name' => 'field_image',
        'type' => 'image',
        'cardinality' => 1,
        'locked' => FALSE,
        'indexes' => array('fid' => array('fid')),
        'settings' => array(
            'uri_scheme' => 'public',
            'default_image' => FALSE,
        ),
        'storage' => array(
            'type' => 'field_sql_storage',
            'settings' => array(),
        ),
    );
    field_create_field($field);


    // Many of the following values will be defaulted, they're included here as an illustrative examples.
    // See http://api.drupal.org/api/function/field_create_instance/7
    $instance = array(
        'field_name' => 'field_image',
        'entity_type' => 'node',
        'label' => 'Image',
        'bundle' => 'article',
        'description' => st('Upload an image to go with this article.'),
        'required' => FALSE,
        'settings' => array(
            'file_directory' => 'field/image',
            'file_extensions' => 'png gif jpg jpeg',
            'max_filesize' => '',
            'max_resolution' => '',
            'min_resolution' => '',
            'alt_field' => TRUE,
            'title_field' => '',
        ),
        'widget' => array(
            'type' => 'image_image',
            'settings' => array(
                'progress_indicator' => 'throbber',
                'preview_image_style' => 'thumbnail',
            ),
            'weight' => -1,
        ),
        'display' => array(
            'default' => array(
                'label' => 'hidden',
                'type' => 'image',
                'settings' => array('image_style' => 'large', 'image_link' => ''),
                'weight' => -1,
            ),
            'teaser' => array(
                'label' => 'hidden',
                'type' => 'image',
                'settings' => array('image_style' => 'medium', 'image_link' => 'content'),
                'weight' => -1,
            ),
        ),
    );
    field_create_instance($instance);

    // Enable default permissions for system roles.
    $filtered_html_permission = filter_permission_name($filtered_html_format);
    user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
    user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

    // Create a default role for site administrators, with all available permissions assigned.
    $admin_role = new stdClass();
    $admin_role->name = 'administrator';
    $admin_role->weight = 2;
    user_role_save($admin_role);
    user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
    // Set this as the administrator role.
    variable_set('user_admin_role', $admin_role->rid);

    // Assign user 1 the "administrator" role.
    db_insert('users_roles')
            ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
            ->execute();

    // Create a Home link in the main menu.
    $item = array(
        'link_title' => st('Home'),
        'link_path' => '<front>',
        'menu_name' => 'main-menu',
    );
    menu_link_save($item);

    // Update the menu router information.
    menu_rebuild();

    /*
     * Set Appearence (Theming)
     */

    // Set Seven as admin theme.
    db_update('system')
            ->fields(array('status' => 1))
            ->condition('type', 'theme')
            ->condition('name', 'seven')
            ->execute();
    variable_set('admin_theme', 'seven');
    variable_set('node_admin_theme', '1');

    // Set variables for file system configuration
    variable_set('file_default_scheme', 'public');
  
    /*
     * Set Configuration -> File System
     */
  
    // Set Private file system path 
    variable_set('file_private_path', 'sites/default/files/private');
    // Set Public file system path 
    variable_set('file_public_path', 'sites/default/files');
    // Set Temporary directory 
    variable_set('file_temporary_path', 'sites/default/files/tmp');

    /*
     * Set Configuration -> Backup and Migrate
     * 
     */

    // Set AnotherDrop Startup Backup Profile
    $settings = array(
        //profile_id doesn't needed to set it manual
        'filename' => variable_get("backup_migrate_file_name", _backup_migrate_default_filename()),
        'append_timestamp' => variable_get("backup_migrate_append_timestamp", FALSE) ? 1 : 0,
        'timestamp_format' => variable_get("backup_migrate_timestamp_format", 'd-m-Y--H-i'),
        'filters' => array(
            'compression' => variable_get("backup_migrate_compression", "gzip"),
            'exclude_tables' => variable_get("backup_migrate_exclude_tables", array()),
            'nodata_tables' => variable_get("backup_migrate_nodata_tables", array()),
            'notify_success_enable' => variable_get("backup_migrate_notify_success_enable", TRUE),
            'notify_failure_enable' => variable_get("backup_migrate_notify_failure_enable", TRUE),
            'utils_site_offline_message' => variable_get("backup_migrate_utils_notify_success_enable", "AnotherDrop Startup Site off-line message "),
            'utils_description' => variable_get("backup_migrate_utils_description", "AnotherDrop Startup short description to the backup file."),
        ),
        'name' => t('AnotherDrop Startup Backup Profile'),
    );
    $profile = backup_migrate_crud_create_item('profile', $settings);
    $profile->save();

    // Set AnotherDrop Startup manual and scheduled Destinations.
    $settings = array(
        'manual' => array(
            //destination_id doesn't needed to set it manual
            'type' => variable_get("backup_migrate_type", "file"),
            'location' => variable_get("backup_migrate_location", 'private://backup_migrate/manual'),
            'name' => t('AnotherDrop Startup destination manual'),
        ),
        'scheduled' => array(
            //destination_id doesn't needed to set it manual
            'type' => variable_get("backup_migrate_type", "file"),
            'location' => variable_get("backup_migrate_location", 'private://backup_migrate/scheduled'),
            'name' => t('AnotherDrop Startup destination scheduled'),
        ),
    );

    foreach ($settings as $setting) {
        $destination = backup_migrate_crud_create_item('destination', $setting);
        $destination->save();
    }

    // Set AnotherDrop Startup Schedule
    $schedule = array(
        'name' => t('AnotherDrop Startup Schedule'),
        'profile_id' => $profile->get_id(),
        'enabled' => 1,
        'destination_id' => $destination->get_id(),
        'period' => 86400,
        'keep' => variable_get("backup_migrate_schedule_backup_keep", 10),
    );
    $schedule = backup_migrate_crud_create_item('schedule', $schedule);
    $schedule->save();

    // Set Quick Backup Destination
    variable_set("backup_migrate_destination_id", $destination->get_id());
    //// Set Quick Backup Profile
    variable_set("backup_migrate_profile_id", $profile->get_id());

    /*
     * Set Configuration -> Wysiwyg
     * Set editor and buttons
     */
    foreach (array('filtered_html', 'full_html') as $f) {
        $wysiwyg_setting = array(
            'default' => 1,
            'user_choose' => 0,
            'show_toggle' => 1,
            'theme' => 'advanced',
            'language' => 'en',
            'wysiwyg_buttons' => array(
                'default' => array(
                    'Bold' => 1,
                    'Italic' => 1,
                    'Underline' => 1,
                    'Strike' => 0,
                    'JustifyLeft' => 1,
                    'JustifyCenter' => 1,
                    'JustifyRight' => 1,
                    'JustifyBlock' => 1,
                    'BulletedList' => 1,
                    'NumberedList' => 1,
                    'Outdent' => 1,
                    'Indent' => 1,
                    'Undo' => 1,
                    'Redo' => 1,
                    'Link' => 1,
                    'Unlink' => 1,
                    'Anchor' => 0,
                    'Image' => 1,
                    'TextColor' => 1,
                    'BGColor' => 1,
                    'Superscript' => 0,
                    'Subscript' => 0,
                    'Blockquote' => 0,
                    'Source' => 0,
                    'HorizontalRule' => 0,
                    'Cut' => 1,
                    'Copy' => 1,
                    'Paste' => 1,
                    'PasteText' => 0,
                    'PasteFromWord' => 1,
                    'ShowBlocks' => 0,
                    'RemoveFormat' => 1,
                    'SpecialChar' => 0,
                    'About' => 0,
                    'Format' => 1,
                    'Font' => 1,
                    'FontSize' => 1,
                    'Styles' => 1,
                    'Table' => 1,
                    'Find' => 0,
                    'Replace' => 0,
                    'SelectAll' => 0,
                    'Flash' => 0,
                    'Smiley' => 0,
                    'Maximize' => 0,
                    'SpellChecker' => 0,
                    'Scayt' => 0,
                ),
                'drupal' => array(
                    'media' => 1,
                    'break' => 0,
                ),
            ),
            'toolbar_loc' => 'top',
            'toolbar_align' => 'left',
            'path_loc' => 'bottom',
            'resizing' => 1,
            'verify_html' => 1,
            'preformatted' => 0,
            'convert_fonts_to_spans' => 0,
            'remove_linebreaks' => 0,
            'apply_source_formatting' => 1,
            'paste_auto_cleanup_on_paste' => 1,
            'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
            'css_setting' => 'theme',
            'css_path' => '',
            'css_classes' => '',
            'buttons' => array(
                'default' => array(
                    'Bold' => 1,
                    'Italic' => 1,
                    'Underline' => 1,
                    'JustifyLeft' => 1,
                    'JustifyCenter' => 1,
                    'JustifyRight' => 1,
                    'JustifyBlock' => 1,
                    'BulletedList' => 1,
                    'NumberedList' => 1,
                    'Anchor' => 1,
                    'TextColor' => 1,
                    'BGColor' => 1,
                    'Outdent' => 1,
                    'Indent' => 1,
                    'Undo' => 1,
                    'Redo' => 1,
                    'Link' => 1,
                    'Unlink' => 1,
                    'Cut' => 1,
                    'Copy' => 1,
                    'Paste' => 1,
                    'PasteFromWord' => 1,
                    'RemoveFormat' => 1,
                    'Styles' => 1,
                    'Table' => 1,
                    'SelectAll' => 1,
                    'Find' => 1,
                    'Replace' => 1,
                ),
                'drupal' => array(
                    'media' => 1,
                ),
                /* To use upload functionality via imce, uncomment this and comment the above drupal => media.
                 * Also set --> 'image' => 1,
                 * 'imce' => array ( 
                 * 'imce' => 1,
                 * ),
                 */
            ),
        );
        db_merge('wysiwyg')
                ->key(array('format' => $f))
                ->fields(array(
                    'editor' => 'ckeditor',
                    'settings' => serialize($wysiwyg_setting),
                ))
                ->execute();
    }

    /*
     * Set Configuration -> Date and time
     */

    // Set AnotherDrop Startup Date type.
    db_insert('date_format_type')->fields(
                    array(
                        'type' => 'AnotherDrop_Startup', // Machine Name
                        'title' => 'AnotherDrop Startup', // Display Name
                        'locked' => 1, // 1 = can't change through UI, 0 = can change
            ))
            ->execute();

    // Set AnotherDrop Startup Date type with the d-m-Y format
    // NOTE: Variable name is date_format_MACHINENAME from date type we have create
    variable_set('date_format_AnotherDrop_Startup', 'd-m-Y');

    // Set custom date formats.
    $settings = array(
        array(
            'format' => 'd-m-Y', // PHP Date String
            'type' => 'custom', // 'custom'
            'locked' => 0, // 0 = user-specified date format
        ),
        array(
            'format' => 'd-m-Y H:i',
            'type' => 'custom',
            'locked' => 0,
        ),
    );
    foreach ($settings as $setting) {
        db_insert('date_formats')->fields($setting)->execute();
    }
                
    /*
     * Set Configuration -> Shortcuts
     * Set Backup and migrate shortcut
     */
    db_insert('menu_links')->fields(
            array(
                'menu_name' => 'shortcut-set-1',
                'router_path' => 'admin/config/system/backup_migrate',
                'link_path' => 'admin/config/system/backup_migrate',
                'link_title' => 'Backup and Migrate',
            )
    )->execute();
        
    /*
     * Set Configuration -> Clean URLs
     * Set Clean Url to disabled. 
     * NOTE: seems not to work as we wanted. The reason is that core
     * after set tha AnotherDrop Startup profile, set again the 'clean_url'
     * variable to enabled
     */
    variable_set('clean_url', 0);

    /*
     * Set Configuration -> Site Information
     * Set Site Slogan
     */
    variable_set('site_slogan', "123456 Slogan");

    /*
     *  Set Configuration -> Performance
     */
    // Set Cache pages for anonymous users 
    variable_set('cache', 1);
    // Set Cache blocks 
    variable_set('block_cache', 1);

    /*
     *  Set Configuration -> Development
     *  Set Maintenance mode message
     */
    variable_set('maintenance_mode_message', 'AnotherDrop Startup is currently under maintenance. We should be back shortly. Thank you for your patience.');

    /*
     *  Set Configuration -> URL Aliases -> Patterns
     *  Set Default path pattern (applies to all content types with blank patterns below)
     */
    variable_set('pathauto_node_pattern', '[node:title]');

        
    /*
     * Set People -> Roles
     */

    // Create a Power User.
    $power_user_role = new stdClass();
    $power_user_role->name = 'power user';
    $power_user_role->weight = 3;
    user_role_save($power_user_role);
    // Set permissions to power user
    user_role_grant_permissions($power_user_role->rid, array(
        'access administration pages',
        'access backup and migrate',
        'access backup files',
        'access content',
        'access content overview',
        'access dashboard',
        'access overlay',
        'access site reports',
        'access site-wide contact form',
        'access toolbar',
        'access user profiles',
        'administer comments',
        'administer contact forms',
        'administer shortcuts',
        'administer users',
        'block IP addresses',
        'cancel account',
        'change own username',
        'create article content',
        'create page content',
        'customize shortcut links',
        'delete own article content',
        'delete own page content',
        'edit media',
        'edit own article content',
        'edit own page content',
        'import media',
        'perform backup',
        'search content',
        'skip comment approval',
        'switch shortcut sets',
        'use text format full_html',
        'view own unpublished content',
        'view the administration theme',
        'use advanced search',
        $filtered_html_permission)
    );
    
   
  }